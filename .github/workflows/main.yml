name: CI-CD-DataBase
env:
  DB_DATABASE: coursework
  DB_USER: root
  DB_PASSWORD: root

on: 
  push:
    branches: 
      - main

jobs:
  my_ci_part:
    runs-on: ubuntu-latest

    steps:
    - name: Git clone our repo
      uses: actions/checkout@v3

    - name: Set up MySQL
      run: |
        sudo /etc/init.d/mysql stop #start
        #mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

    - name: Install Liquibase
      run: |
        wget -O- https://repo.liquibase.com/liquibase.asc | gpg --dearmor > liquibase-keyring.gpg && \
        cat liquibase-keyring.gpg | sudo tee /usr/share/keyrings/liquibase-keyring.gpg > /dev/null && \
        echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/liquibase-keyring.gpg] https://repo.liquibase.com stable main' | sudo tee /etc/apt/sources.list.d/liquibase.list
        sudo apt-get update
        sudo apt-get install liquibase

    - name: DB
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3306 
        container port: 3306 
        character set server: 'utf8' 
        collation server: 'utf8_general_ci' 
        mysql version: '8.0' 
        mysql database: 'coursework' 
        mysql root password: ${{ env.DB_PASSWORD }} 

    - name: Import DB
      run: |
        mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
        echo '---------------------------------'
        mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} ${{ env.DB_DATABASE }} < coursework.sql
        mysql -e 'use ${{ env.DB_DATABASE }}; show tables;' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
        echo '---------------------------------'

    - name: Create Linqibase File
      run: |
        echo '<?xml version="1.0" encoding="UTF-8"?> <!--db.changelog.xml--> <databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" \
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog \
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd"> </databaseChangeLog>' > db.changelog.xml 
        cat db.changelog.xml 
    
    #- name: Run 'Liquibase update' in a Docker Container
     # uses: docker://liquibase/liquibase:latest
      #with:
       # args: --url="jdbc:mysql://mysql:3306/coursework?autoReconnect=true&useSSL=false" --changeLogFile=coursework.sql --username=${{ env.DB_USER }} --password=${{ env.DB_PASSWORD }} --logLevel=debug update
    
    - name: Print Happy Message for CI finish
      run : echo "CI Pipeline part Finished successfully!"
